---
title: "Bachelor Kolloquium"
subtitle: "Konzeption und Entwicklung eines Systems zur Verwaltung und Erstellung von ModulhandbÃ¼chern"
date: now
date-format: "D. MMMM YYYY"
format:
  revealjs:
    header: Bachelor Kolloquium
    slide-number: true
    chalkboard:
      buttons: false
    preview-links: auto
    logo: images/hsh.svg
    css: styles.css
    footer: Tobias Wylega
    theme: serif
    template-partials:
        - title-slide.html
    include-in-header:
      - text: |
          <script src = "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
          <script type="text/javascript">
            $(document).ready(function() {
              $('body').prepend('<div class=\"zoomDiv\"><img src=\"\" class=\"zoomImg\"></div>');
              // onClick function for all plots (img's)
              $('img:not(.zoomImg)').click(function() {
                $('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});
                $('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});
              });
              // onClick function for zoomImg
              $('img.zoomImg').click(function() {
                $('.zoomDiv').css({opacity: '0', width: '0%'});
              });
            });
          </script>
revealjs-plugins:
  - attribution
resources:
  - demo.pdf
filters:
  - reveal-header

---

# ModulhandbÃ¼cher
- Was sind ModulhandbÃ¼cher?
- Warum sind sie wichtig?
- Wie werden sie erstellt?

## Was sind ModulhandbÃ¼cher?
::: header
ModulhandbÃ¼cher
:::
::: {.columns}

::: {.column width="50%"}
StudiengÃ¤nge sind in Module unterteilt.

Jedes Modul hat eine Beschreibung.
:::

::: {.column width="50%"}
![](images/handbuch.png)
:::
:::

## Bisheriger Prozess
::: header
ModulhandbÃ¼cher
:::
- ModulhandbÃ¼cher werden in Word erstellt

### 1. Verbesserung
- ModulhandbÃ¼cher wurden in Datenbank Ã¼berfÃ¼hrt
- Aus Datenbank wurden PDFs generiert


## Probleme
::: header
ModulhandbÃ¼cher
:::
Direkter Zugriff auf Datenbank bringt Probleme mit sich:

- Software notwendig
- Keine Versionierung
- Keine Validierung
- Datenbank selbst enthÃ¤lt noch Redundanzen

-> Neues System notwendig


# Zielgruppe
Wer wird das neue System nutzen?

## Interessierte & Studierende
::: header
Zielgruppe
:::

Welche Inhalte bietet das Studium?

Welche Wahlpflichtmodule gibt es?

Welche Voraussetzungen gibt es fÃ¼r Modul X?


##
::: header
Zielgruppe
:::
### Dozierende
Aktualisieren von Modulbeschreibungen

### Studiendekan
VerÃ¶ffentlichung von ModulhandbÃ¼chern


# Anforderungen
Auszug aus den Anforderungen

## Technische Anforderungen
::: header
Anforderungen
:::

- Angular Frontend
- NestJS Backend
- Prisma ORM


# Entwurf
- Wie muss die Datenbank strukturiert sein?
- Wie wird das Frontend aussehen?

## ER-Diagramm {auto-animate="true"}
::: header
Entwurf
:::
![](images/fullER.svg)

## ER-Diagramm Auszug {auto-animate="true"}
::: header
Entwurf
:::
![](images/simple_ER.svg)

## Frontend - Startseite
::: header
Entwurf
:::
![](images/Navigation.svg)

## Frontend - Modulansicht
::: header
Entwurf
:::
![](images/ModernPreview.svg)


## Frontend - Modulbearbeitung
::: header
Entwurf
:::
![](images/AddModule.svg)

## Recap
âœ… Use Cases / Anforderungen

âœ… Entwurf der Datenbank

âœ… Entwurf des Frontends

ðŸ”œ Implementierung

# Implementierung
- Designentscheidungen
- Herausforderungen


## UI-Framework
::: header
Implementierung
:::
### Bootstrap vs. PrimeNG
<br>

|   | Bootstrap  | PrimeNG  |
|--------|--------|--------|
| Weekly Downloads  | 424,283   | 355,443   |
| ...  | ...   | ...   |
| Anzahl Komponenten | ~25   | ~100   |



## Ãœbersetzbarkeit
::: header
Implementierung
:::

::: {.fragment}
- Angular i18n
    - Einrichtung ist aufwÃ¤ndig
    - Keine zentrale Ãœbersetzungsdatei
:::
::: {.fragment}
- Transloco
    - Einfache Einrichtung
    - Zentrale Ãœbersetzungsdatei
:::

## Ãœbersetzbarkeit - Beispiel {auto-animate="true"}
HTML-Template:

::: {data-id="box2"}
```html
<ng-container *transloco="let t">
</ng-container>
```
:::

## Ãœbersetzbarkeit - Beispiel {auto-animate="true"}
HTML-Template:

::: {data-id="box2"}
```html
<ng-container *transloco="let t">
  <p>{{ t('title') }}</p>
</ng-container>
```
:::

::: {.fragment}
TypeScript-Datei:
```ts
console.log(translate('title'));
```
:::

::: {.fragment}
Ãœbersetzungsdatei:
```json
{
  "title": "Titel"
}
```
:::





## Code

```python{.python code-line-numbers="2|4"}
n = 0
while n < 10:
  if n % 2 == 0:
    print(f"{n} is even")
  n += 1
```

::: footer
Custom footer text
:::

::: header

Custom Header

:::

::: {.attribution}
Photo courtesy of [@ingtotheforest](https://unsplash.com/@ingtotheforest)
:::

## Columns
:::: {.columns}

::: {.column width="60%"}
```python{.python code-line-numbers="2|4"}
n = 0
while n < 10:
  if n % 2 == 0:
    print(f"{n} is even")
  n += 1
```
:::

::: {.column width="40%"}
ErklÃ¤render Text

- first item ^[A footnote]
    - A sub item
:::

::::

## Code Animated {auto-animate="true"}

```python
n = 0
while n < 10:
  n += 1
```

## Code Animated 2 {auto-animate="true"}

```python
n = 0
while n < 10:
  if n % 2 == 0:
    print(f"{n} is even")
  n += 1
```

## Code Animated 3 {auto-animate="true"}

```python
n = 0
while n < 10:
  if n % 2 == 0:
    print(f"{n} is even")
  else:
    print(f"{n} is odd")
  n += 1
```

# new slide
with text

## {#demo}
```{=html}
<iframe width="780" height="500" src="https://studymodules.tobi.win/faculties" title="Webpage example"></iframe>
```